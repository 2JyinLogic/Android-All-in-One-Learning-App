<resources>
    <string name="app_name">GroupProject</string>

    <string name="code_link_nightmode">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/EffectExampleNightMode.java</string>
    <string name="code_link_rippleeffect">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/EffectExampleRippleEffect.java</string>
    <string name="code_link_loadingeffect">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/EffectExampleLoadingEffect.java</string>
    <string name="code_link_progressbareffect">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/EffectExampleProgressBarLoadingEffect.java</string>
    <string name="code_link_fancyloadingeffect">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/EffectExampleFancyLoadingEffect.java</string>
    <string name="code_link_zooming">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/EffectExampleZooming.java</string>
    <string name="code_link_dragging">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/EffectExampleDragView.java</string>
    <string name="code_link_bgservice">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/BGServiceExampleService.java</string>
    <string name="code_link_boundservice">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/BoundServiceExampleService.java</string>
    <string name="code_link_alertdialog">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/AlertDialogExample.java</string>
    <string name="code_link_datepickerdialog">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/DatePickerDialogExample.java</string>
    <string name="code_link_navigation1">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/NavigationExample.java</string>
    <string name="code_link_navigation2">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/NavigationDrawerExample.java</string>
    <string name="code_link_animation1">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/AnimationsExample.java</string>
    <string name="code_link_frameanimation">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/FrameAnimationsExample.java</string>
    <string name="code_link_attributeanimation">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/AttributeAnimationsExample.java</string>
    <string name="code_link_fgservice">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/FGServiceExampleService.java</string>
    <string name="code_link_popupwindow">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/PopupWindowExample.java</string>
    <string name="code_link_bottomsheetdialog">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/BottomSheetExample.java</string>
    <string name="code_link_timepickerdialog">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/TimePickerDialogExample.java</string>
    <string name="code_link_progressdialog">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/ProgressDialogExample.java</string>
    <string name="code_link_button1">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/ButtonWidget.java</string>
    <string name="code_link_switch1">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/SwitchWidget.java</string>
    <string name="code_link_radio1">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/RadioGroupWidget.java</string>
    <string name="code_link_progress1">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/ProgressBarWidget.java</string>
    <string name="code_link_seek1">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/SeekBarWidget.java</string>
    <string name="code_link_reqpermission">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/RequestPermissionExample.java</string>
    <string name="code_link_systemsettings">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/GoSystemSettingsExample.java</string>
    <string name="code_link_interactcamera">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/InteractCameraExample.java</string>
    <string name="code_link_interactcalendar">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/InteractCalendarExample.java</string>
    <string name="code_link_appspecific">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/AppSpecificFilesExample.java</string>
    <string name="code_link_sensors">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/SensorsExampleActivity.java</string>
    <string name="code_link_qrcode1">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/QRcodeGenerateExamole.java</string>
    <string name="code_link_qrcode2">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/QRcodeScanExamole.java</string>
    <string name="code_link_timer">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/TimerExamole.java</string>


    <string name="doc_link_timepickerdialog">https://developer.android.com/reference/android/app/TimePickerDialog</string>
    <string name="doc_link_progressdialog">https://developer.android.com/reference/android/app/ProgressDialog</string>
    <string name="doc_link_bottomsheetdialog">https://developer.android.com/reference/com/google/android/material/bottomsheet/BottomSheetDialogFragment</string>
    <string name="doc_link_popupwindow">https://developer.android.com/reference/android/widget/PopupWindow</string>
    <string name="doc_link_nightmode">https://developer.android.com/develop/ui/views/theming/darktheme</string>
    <string name="doc_link_rippleeffect">https://developer.android.com/reference/android/graphics/drawable/RippleDrawable</string>
    <string name="doc_link_loadingeffect">https://developer.android.com/develop/ui/views/launch/splash-screen/migrate</string>
    <string name="doc_link_progressbareffect">https://developer.android.com/reference/android/widget/ProgressBar</string>
    <string name="doc_link_fancyloadingeffect">https://developer.android.com/jetpack/compose/components/progress</string>
    <string name="doc_link_zooming">https://developer.android.com/jetpack/compose/touch-input/pointer-input/multi-touch</string>
    <string name="doc_link_dragging">https://developer.android.com/jetpack/compose/touch-input/pointer-input/drag-swipe-fling</string>
    <string name="doc_link_bgservice">https://developer.android.com/guide/components/services</string>
    <string name="doc_link_boundservice">https://developer.android.com/guide/components/services#CreatingBoundService</string>
    <string name="doc_link_alertdialog">https://developer.android.com/reference/android/app/AlertDialog</string>
    <string name="doc_link_datepickerdialog">https://developer.android.com/develop/ui/views/components/pickers#DatePicker</string>
    <string name="doc_link_navigation1">https://developer.android.com/guide/navigation</string>
    <string name="doc_link_navigation2">https://developer.android.com/guide/navigation</string>
    <string name="doc_link_animation1">https://developer.android.com/develop/ui/views/animations/overview</string>
    <string name="doc_link_frameanimation">https://developer.android.com/develop/ui/views/animations/overview</string>
    <string name="doc_link_attributeanimation">https://developer.android.com/develop/ui/views/animations/overview</string>
    <string name="doc_link_fgservice">https://developer.android.com/guide/components/foreground-services</string>
    <string name="doc_link_button1">https://developer.android.com/reference/android/widget/Button</string>
    <string name="doc_link_switch1">https://developer.android.com/reference/android/widget/Switch</string>
    <string name="doc_link_radio1">https://developer.android.com/reference/android/widget/RadioGroup</string>
    <string name="doc_link_progress1">https://developer.android.com/reference/android/widget/ProgressBar</string>
    <string name="doc_link_seek1">https://developer.android.com/reference/android/widget/SeekBar</string>
    <string name="doc_link_reqpermission">https://developer.android.com/training/permissions/requesting</string>
    <string name="doc_link_systemsettings">https://developer.android.com/reference/android/provider/Settings</string>
    <string name="doc_link_interactcamera">https://developer.android.com/training/camera/photobasics</string>
    <string name="doc_link_interactcalendar">https://developer.android.com/reference/android/provider/CalendarContract</string>
    <string name="doc_link_appspecific">https://developer.android.com/training/data-storage/app-specific</string>
    <string name="doc_link_sensors">https://developer.android.com/develop/sensors-and-location/sensors/sensors_overview#java</string>
    <string name="doc_link_qrcode1">https://developer.android.com/training/data-storage/app-specific</string>
    <string name="doc_link_qrcode2">https://developer.android.com/training/data-storage/app-specific</string>
    <string name="doc_link_timer">https://developer.android.com/training/data-storage/app-specific</string>




    <string name="alertdialog_example_desc">
    This example demonstrates how to use AlertDialogs in Android to show pop-up messages or get user input. It covers creating alert dialogs with buttons, custom layouts, and handling user responses.
    </string>

    <string name="interactcamera_example_desc">
    This example demonstrates how to interact with the camera in your Android app. You can take pictures, request camera permissions, and display captured images.
    </string>
    <string name="interactcalendar_example_desc">
    This example demonstrates how to add events to the user\'s calendar from an Android application. Integrating calendar functionality enhances user engagement by seamlessly managing their schedule within your app.
    </string>

    <string name="night_mode_example_desc">
        During bright daylight conditions, utilize the "Light Mode," and switch to the "Night Mode"
        when the lighting is dim during the night.

        In this example, with just a simple tap on the switch, you can experience a seamless transition
        between light and night modes with this intuitive UI switch.
    </string>
    <string name="ripple_effect_example_desc">
        Ripple effects are commonly employed in various scenarios,
        such as signal retrieval and button clicks, to enhance the user\'s visual experience.
        In this example, you can initiate the ripple effect by clicking on the character icon.
        Clicking on the blank area halts the ripple effect,
        providing a dynamic and interactive visual feedback mechanism.
    </string>
    <string name="loading_effect_example_desc">
        Shimmer Loading is a technique employed during data loading to provide user feedback.
        It utilizes grayed-out areas or icons to simulate the layout of the content that is about to load,
        allowing users to perceive that the page is in the process of loading.
        This approach helps alleviate user anxiety during data loading by providing a visual indication of ongoing activity.
    </string>
    <string name="progress_bar_effect_example_desc">
        Progress bar is a dynamic loading indicator designed to enhance user experience during data retrieval.
        It employs a pulsating animation or color change to signify ongoing loading, offering users a visual cue of the process.
        This subtle yet effective technique minimizes user apprehension, ensuring a seamless and informed navigation experience.
    </string>
    <string name="fancy_loading_effect_example_desc">
        Fancy loading effects serve as captivating dynamic indicators,
        enriching the user experience throughout various processes.
        These visually appealing animations transcend conventional loading bars, introducing a delightful view to user interfaces.
        Here are nine fancy loading effects that elevate the user experience:
    </string>
    <string name="zooming_example_desc">
        Image zooming is a transformative feature that enhances the user experience when interacting with visual content.
        It goes beyond the conventional static display,
        offering users an immersive and dynamic exploration of images.
        This engaging functionality allows users to zoom in and out,
        providing a closer look at details and creating a more interactive and personalized viewing experience.
    </string>
    <string name="dragging_example_desc">
        Image dragging is a dynamic and interactive feature that significantly enhances the user experience when engaging with visual content.
        Unlike traditional static displays, dragging empowers users to navigate through images seamlessly,
        offering a more immersive and personalized exploration.
    </string>
    <string name="frame_animations_example_desc">
        Frame animation splices a series of pictures through a frame file in drawable, sets the display time of each picture,
        and then displays it by calling @ drawable/frame in layout
        click the button, it will show from the first frame, this makes it look like a continuous animation.
    </string>
    <string name="attribute_animations_example_desc">
        Attribute animation provides a more convenient way to operate.
        By configuring the attributes in the Object Animator, you can control all the attributes contained in the image/text,
        such as "alpha", transparency, scaling, rotation, color change, and so on
    </string>
    <string name="request_permission_example_desc">
        Every Android app runs in a limited-access sandbox. If your app needs to use resources or
        information outside of its own sandbox, you can declare a runtime permission and
        set up a permission request that provides this access.

        In this example, each button on the page can be clicked to prompt the app to
        ask for a specific runtime permission. Normally, you should do this when the user starts
        interacting with the yrelated feature. Declare in the manifest in advance what permissions
        you may need.
    </string>
    <string name="bg_service_example_desc">
        A background service performs an operation that isn\'t directly noticed by the user.

        In this example, a BG service will be created to repeatedly increase the value of an integer by 1 and sleep for a few seconds.
        Note how running the service in the UI thread will freeze the UI and eventually leads to the app being killed.
    </string>
    <string name="bound_service_example_desc">
        A bound service is an implementation of the Service class that lets other applications bind to it and interact with it.
        To provide binding for a service, you implement the onBind() callback method.
        This method returns an IBinder object that defines the programming interface that clients can use to interact with the service.

        In this example, a bound and started service will be created to play music in the background.
        You can bind to the service to control the music play, but even after you unbind, the music is still being played,
        unless you stop the service.
    </string>
    <string name="fg_service_example_desc">
        Foreground services perform operations that are noticeable to the user.
        Foreground services show a status bar notification to make users aware
        that the app is performing a task in the foreground and is consuming system resources.

        In this example, a foreground service will be created to show the user a message,
        and the user can interact with the message (e.g. reply to, dismiss) on the notification
        even when the app is closed.
    </string>
    <string name="go_system_settings_example_desc">
        The system settings app on every Android device is a place where the user can adjust nearly
        every setting about the system, about the user, and about each app. However, because there
        are so many entries, a novice user can be easily confused by where to look when he needs to
        alter a specific setting.

        In this example, you can learn to navigate the user to MANY specific settings entries in the
        system settings app.
    </string>
    <string name="app_specific_files_example_desc">
        In many cases, your app creates files that other apps don\'t need to access,
        or shouldn\'t access. The system provides the following locations for storing such app-specific files:
        Internal storage directories and
        External storage directories. You can create both persistent and cache files.

        In this example, you can create persistent and cache files in any of the directories and check
        if a file exists.
    </string>
    <string name="sensors_example_desc">
        Most Android-powered devices have built-in sensors that measure motion, orientation, and various environmental conditions.
        These sensors are capable of providing raw data with high precision and accuracy,
        and are useful if you want to monitor three-dimensional device movement or positioning,
        or you want to monitor changes in the ambient environment near a device.

        In this example, you will learn how to get the accuracy and values from different kinds of sensors.
    </string>
    <string name="popupwindow_example_desc">
       A small pop-up window used to appear at the top of the screen, usually to display additional information or options.
    </string>
    <string name="bottomsheetdialog_example_desc">
    Let BottomSheetDialog support data handling functions, such as getting user input, performing some logical operations, and displaying the results. Here, we use Example: Reverse order the input string
    </string>
    <string name="progressdialog_example_desc">
       ProgressDialog used to display a progress bar or loading indicator, typically used when performing a long task to notify the user that the task is in progress.
    </string>
    <string name="timepickerdialog_example_desc">
       Select a date from a calendar view.
    </string>
    <string name="button_desc">
       Button is a common type of widget which is the simplest way to interact with an application. Users can click it in order to transmit their instructions. Click on the button and the change will be shown.
    </string>
    <string name="radio_desc">
       Radio group is a group of buttons, but only one button of them can be chosen. Choose one button and the change will be shown.
    </string>
    <string name="switch_desc">
       Switch is a common type of widget. It has two states, on and off. The two states of the widget represent two states of the application. The layout will change according to the change of the state of a switch.
    </string>
    <string name="progress_desc">
      A type of widget to show the progress of the program in order to give the users an approximate waiting time.
    </string>
    <string name="seek_desc">
       Drag the seek bars and the text will be changed according to the state of the seek bar.
    </string>
    <string name="qrcode_generate_desc">
       Show how to generate QRcodes. Input message here.
    </string>
    <string name="qrcode_scan_desc">
       Show how to scan QRcodes.
    </string>

    <string name="fg_example_channel_name">FG Example Channel</string>
    <string name="fg_example_channel_desc">The channel for the Foreground Service example.</string>
    <string name="animations_example_desc">
    The tweens animation only needs to set the two states and duration before and after,
    and the software automatically completes the middle process. Below, using alpha, rotate, scale,
    and translate as examples, we will demonstrate how to use onclicklistening to achieve element changes.
    </string>
    <string name="navigation_example_desc">
    The bottom navigation bar is generally used for page transitions, making it easy to build an overall framework,
    highlight core functions, simplify workflow, and facilitate user page switching
    In addition, the selection status and other statuses can be customized in the settings,
    making it easy to highlight the current page.
    </string>
    <string name="navigation_drawer_example_desc">
    Press and hold the left edge or drag to display the drawer navigation bar.
    </string>
    <string name="timer_example_desc">
    Set a countdown and prompt after the time has ended.
    </string>


</resources>