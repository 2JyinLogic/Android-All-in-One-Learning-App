<resources>
    <string name="app_name">GroupProject</string>

    <string name="code_link_1">https://developer.android.com/studio/run/emulator</string>
    <string name="code_link_2">https://developer.android.com/guide/topics/resources/string-resource</string>
    <string name="code_link_3">https://developer.android.com/studio/run/emulator</string>
    <string name="code_link_4">https://developer.android.com/guide/topics/resources/string-resource</string>
    <string name="code_link_5">https://developer.android.com/studio/run/emulator</string>
    <string name="code_link_6">https://developer.android.com/guide/topics/resources/string-resource</string>
    <string name="code_link_7">https://developer.android.com/studio/run/emulator</string>
    <string name="code_link_8">https://developer.android.com/guide/topics/resources/string-resource</string>
    <string name="code_link_9">https://developer.android.com/guide/topics/resources/string-resource</string>
    <string name="code_link_bgservice">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/BGServiceExampleService.java</string>
    <string name="code_link_boundservice">https://github.com/CAN301GroupProj2023/CAN301GroupProject2023/blob/master/app/src/main/java/com/can301/gp/demos/BoundServiceExampleService.java</string>
    <string name="code_link_wvwidget">https://github.com/wangjiegulu/WheelView</string>
    <string name="code_link_btwidget">https://github.com/wangjiegulu/WheelView</string>

    <string name="bg_service_example_desc">
        A background service performs an operation that isn\'t directly noticed by the user.
        In this example, a BG service will be created to repeatedly increase the value of an integer by 1 and sleep for a few seconds.
        Note how running the service in the UI thread will freeze the UI and eventually leads to the app being killed.
    </string>
    <string name="bound_service_example_desc">
        A bound service is an implementation of the Service class that lets other applications bind to it and interact with it.
        To provide binding for a service, you implement the onBind() callback method.
        This method returns an IBinder object that defines the programming interface that clients can use to interact with the service.

        In this example, a bound and started service will be created to play music in the background.
        You can bind to the service to control the music play, but even after you unbind, the music is still being played,
        unless you stop the service.
    </string>
    <string name="title_activity_wheel_view_widget">WheelViewWidget</string>
    <!-- Strings used for fragments for navigation -->
    <string name="first_fragment_label">First Fragment</string>
    <string name="second_fragment_label">Second Fragment</string>
    <string name="next">Next</string>
    <string name="previous">Previous</string>

    <string name="lorem_ipsum">
        Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam in scelerisque sem. Mauris
        volutpat, dolor id interdum ullamcorper, risus dolor egestas lectus, sit amet mattis purus
        dui nec risus. Maecenas non sodales nisi, vel dictum dolor. Class aptent taciti sociosqu ad
        litora torquent per conubia nostra, per inceptos himenaeos. Suspendisse blandit eleifend
        diam, vel rutrum tellus vulputate quis. Aliquam eget libero aliquet, imperdiet nisl a,
        ornare ex. Sed rhoncus est ut libero porta lobortis. Fusce in dictum tellus.\n\n
        Suspendisse interdum ornare ante. Aliquam nec cursus lorem. Morbi id magna felis. Vivamus
        egestas, est a condimentum egestas, turpis nisl iaculis ipsum, in dictum tellus dolor sed
        neque. Morbi tellus erat, dapibus ut sem a, iaculis tincidunt dui. Interdum et malesuada
        fames ac ante ipsum primis in faucibus. Curabitur et eros porttitor, ultricies urna vitae,
        molestie nibh. Phasellus at commodo eros, non aliquet metus. Sed maximus nisl nec dolor
        bibendum, vel congue leo egestas.\n\n
        Sed interdum tortor nibh, in sagittis risus mollis quis. Curabitur mi odio, condimentum sit
        amet auctor at, mollis non turpis. Nullam pretium libero vestibulum, finibus orci vel,
        molestie quam. Fusce blandit tincidunt nulla, quis sollicitudin libero facilisis et. Integer
        interdum nunc ligula, et fermentum metus hendrerit id. Vestibulum lectus felis, dictum at
        lacinia sit amet, tristique id quam. Cras eu consequat dui. Suspendisse sodales nunc ligula,
        in lobortis sem porta sed. Integer id ultrices magna, in luctus elit. Sed a pellentesque
        est.\n\n
        Aenean nunc velit, lacinia sed dolor sed, ultrices viverra nulla. Etiam a venenatis nibh.
        Morbi laoreet, tortor sed facilisis varius, nibh orci rhoncus nulla, id elementum leo dui
        non lorem. Nam mollis ipsum quis auctor varius. Quisque elementum eu libero sed commodo. In
        eros nisl, imperdiet vel imperdiet et, scelerisque a mauris. Pellentesque varius ex nunc,
        quis imperdiet eros placerat ac. Duis finibus orci et est auctor tincidunt. Sed non viverra
        ipsum. Nunc quis augue egestas, cursus lorem at, molestie sem. Morbi a consectetur ipsum, a
        placerat diam. Etiam vulputate dignissim convallis. Integer faucibus mauris sit amet finibus
        convallis.\n\n
        Phasellus in aliquet mi. Pellentesque habitant morbi tristique senectus et netus et
        malesuada fames ac turpis egestas. In volutpat arcu ut felis sagittis, in finibus massa
        gravida. Pellentesque id tellus orci. Integer dictum, lorem sed efficitur ullamcorper,
        libero justo consectetur ipsum, in mollis nisl ex sed nisl. Donec maximus ullamcorper
        sodales. Praesent bibendum rhoncus tellus nec feugiat. In a ornare nulla. Donec rhoncus
        libero vel nunc consequat, quis tincidunt nisl eleifend. Cras bibendum enim a justo luctus
        vestibulum. Fusce dictum libero quis erat maximus, vitae volutpat diam dignissim.
    </string>

    <string name="wheelViewDes">
        A widget which allows users to use mouse wheel to scroll through the set range to select the target options required by them. This control allows users to see more options on a page to a greater extent, making it easier for users to compare options.
    </string>

    <string name="buttonDes">
        Buttons are the most common, most commonly used controls, users can click buttons to complete the interaction with the application.
    </string>
    <string name="title_activity_button_widget">ButtonWidget</string>
</resources>